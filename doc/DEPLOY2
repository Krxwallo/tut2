
cd /srv
sudo mkdir tut2
sudo chown martin.martin tut2
cd tut2/
git clone https://github.com/grindylow/tut2.git

python3 -m virtualenv tut2env -p python3

source tut2env/bin/activate
pip install flask flask-debugtoolbar flask-login pymongo

cd tut2/tut2app/
python setup_wizard.py
sudo service mongodb restart


At this stage you can try running TUT2 with its built-in http server
as follows:
```
python runserver.py
```

Since TUT2 doesn't support on-the fly user creation yet, we will need
to create a user before we can do anything useful. Alternatively,
this is where we would restore an existing database.

    cat secrets.conf
    mongo admin -u tut2rw -p "..."
    use tut2db
    db.tut2users.insert({id:'user1', salt:'...', fullname:'Krub Bub', tut2_uid:'user1-x',password_hash:'...'})
    db.tut2users.remove({id:'user1'}) # abab
    # then insert again with correct hash taken from logging output


WSGI Setup
----------

Roughly following http://flask.pocoo.org/docs/0.12/deploying/mod_wsgi.

Put the following lines into the corresponding ...ssl.conf, on Ubuntu
16.04LTS this will be /etc/apache2/sites-enabled/default-ssl.conf, inside
the <IfModule> and <VirtualHost> tags.

    # TUT2 WSGI integration
    WSGIDaemonProcess tut2daemonprocess threads=5 home=/srv/tut2/tut2/tut2app
    WSGIScriptAlias /tut2 /srv/tut2/tut2/tut2app/tut2.wsgi

    <Directory /srv/tut2/tut2/tut2app>
        WSGIProcessGroup tut2daemonprocess
        WSGIApplicationGroup %{GLOBAL}
    	Require all granted
    </Directory>

@future: add separate lines for the STATIC subdirectory so it doesn't
         have to go through WSGI/Flask?
